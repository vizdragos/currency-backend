<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<import resource="classpath:db-config.xml"/>

	<context:component-scan base-package="com.currency.service, com.currency.util"/>
	<tx:annotation-driven/>
	<jpa:repositories base-package="com.currency.repository"/>

	<!-- FactoryBean that creates the JPA EntityManagerFactory  -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.currency.model"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
			      p:database="${hibernate.database}"/>
			<!-- the 'database' parameter refers to the database dialect being used.
					By default, Hibernate will use a 'H2' dialect because 'jpa.database' has been set to 'H2'
					inside file db.properties -->
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
			</props>
		</property>
	</bean>

	<!-- A transaction manager for working with JPA EntityManagerFactories -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>


	<!--
		Post-processor to perform exception translation on @Repository classes (from native
		exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
	-->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>


	<!--<bean class="org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar">
			<property name="dateTimeFormatter" value="#{ T(org.joda.time.format.DateTimeFormat).forPattern('dd-MMM-yy HH:mm:ss') }" />
		</bean>-->

</beans>